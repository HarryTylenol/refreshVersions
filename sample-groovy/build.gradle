plugins {
    id 'de.fayard.buildSrcVersions'
    id 'com.gradle.build-scan'
    id 'application'
    id 'idea'
    id 'java'
}

group = "de.fayard"

buildSrcVersions {
    // See configuration options at https://github.com/jmfayard/buildSrcVersions/issues/53
    indent = "     "
}

repositories {
    maven {
        setUrl("../plugin/src/test/resources/maven")
    }
    mavenCentral()
    jcenter()
    google()
}

dependencies {
    compile("com.google.guava:guava:15.0")
    compile("com.google.inject:guice:2.0")
    compile("androidx.annotation:annotation:1.1.0")
    //compile("org.jetbrains:annotation:17.0.0")
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
}

buildSrcVersions {
    useFqdnFor('module', 'com.google.inject')
    renameLibs = "Libs"
    renameVersions = "Versions"
    indent = "    "
//    rejectVersionIf {
//        isNonStable(candidate.version) && !isNonStable(currentVersion)
//    }
}
wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = findProperty("gradleLatestVersion") ?: gradle.gradleVersion
}

buildScan {
    setTermsOfServiceUrl("https://gradle.com/terms-of-service")
    setTermsOfServiceAgree("yes")
}
